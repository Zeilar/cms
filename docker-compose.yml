version: "3.7"

services:
    api:
        container_name: api
        build:
            context: ./apps/api
            dockerfile: ./Dockerfile
        networks:
            - cms
        restart: always
        ports:
            - 4444
        volumes:
            - type: bind
              source: ./apps/api
              target: /usr/src/app
    frontend:
        container_name: frontend
        build:
            context: ./apps/frontend
            dockerfile: ./Dockerfile
        networks:
            - cms
        restart: always
        ports:
            - 3333
        volumes:
            - type: bind
              source: ./apps/frontend
              target: /usr/src/app
    db:
        container_name: db
        image: postgres
        networks:
            - cms
        ports:
            - ${DB_PORT}
        volumes:
            - db:/var/lib/postgres
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: ${DB_PASSWORD}
    proxy:
        container_name: proxy
        image: nginx
        restart: always
        networks:
            - cms
        ports:
            - 80:80
            - 443:443
        volumes:
            - type: bind
              source: ./libs/proxy/sites-enabled
              target: /etc/nginx/sites-enabled
    adminer:
        container_name: adminer
        networks:
            - cms
        image: adminer
        restart: always
        ports:
            - ${ADMINER_PORT}

volumes:
    db:
networks:
    cms:
