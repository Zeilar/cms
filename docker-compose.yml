version: "3.7"

services:
    db:
        container_name: db
        image: postgres:15rc1
        networks:
            - cms
        ports:
            - ${DB_PORT}
        volumes:
            - db:/var/lib/postgres
            - ./libs/db/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: ${DB_PASSWORD}
    proxy:
        container_name: proxy
        image: nginx:1.23.1-alpine
        restart: always
        networks:
            - cms
        ports:
            - 80:80
            - 443:443
        volumes:
            - type: bind
              source: ./libs/proxy/sites-enabled
              target: /etc/nginx/sites-enabled
    adminer:
        container_name: adminer
        networks:
            - cms
        image: adminer:4.8.1-standalone
        restart: always
        ports:
            - ${ADMINER_PORT}:${ADMINER_PORT}
    api:
        container_name: api
        env_file:
            - apps/api/.env
        build:
            context: .
            dockerfile: apps/api/Dockerfile
        networks:
            - cms
        restart: always
        ports:
            - 4444
    frontend:
        container_name: frontend
        build:
            context: .
            dockerfile: apps/frontend/Dockerfile
        networks:
            - cms
        restart: always
        ports:
            - 3333

volumes:
    db:
networks:
    cms:
